<script>
<?php
echo "var currStatus = ".json_encode($this->currStatus).";\n"; 
echo 'var projTitle = "'.$this->projTitle.'";'."\n";
echo 'var projContractMD = "'.$this->dataGrid->projData['contractMD'].'";'."\n";
echo $this->jsData;
?>
    var spreadTable, max;
    $(document).ready(function () {
        $("#Referencealternate").datepicker({"dateFormat":"dd\/mm\/yy","altField":"#Reference","regional":"it","altFormat":"yy-mm-dd","navigationAsDateFormat":true});

        spreadTable = $('#spreadSheet').find('table');
        max = {
            y: spreadTable.find('tr').length,
                    x: spreadTable.parent().find('th').length
            };

        spreadTable.heavyTable({
            xPosition: 6,
                    yPosition: 3
            });

        dettTable = $('#detailSheet').find('table');

        $('#CashGrid').click(function(){
            window.location=<?php echo '"'.$this->baseUrl().
                    '/spese-mese/list/id/'.$this->currId.'"';?> + 
                                "/ym/-/ric/";
        });
            
        $("#esci").click(function () {
//                return (document.activeElement.getAttribute('id') == "esci");
            if(document.activeElement.getAttribute('id') == "esci")
                {
                $('<div id=\'warningSave\' title=\'Saving...\'  class=\'centeredWarning\'></div>').dialog({
//                            autoOpen: false,
//                            title: "myDialog",
//                            modal: true,
//                            width: "800",
                        hide: { effect: "fade", duration: 2000 } //put the fade effect
                    });
                saveAll();
                $('#outAjax').attr('value', '1');                    
                var outForm = $('#exitForm').serialize();
                var phpUrl=baseUrl+'/giorni-lav/savegrid';
                request = $.ajax({
                    url: phpUrl,
                    type: "post",
                    data: outForm,
                    success: function(result){
                        $('#warningSave').html('<br><h3>Ok!</h3>')
//                            $('#warningSave').dialog('close');
//                            $('#warningSave').dialog().delay(2000).remove();
                        $("#warningSave").fadeOut(1000, function(){
                            $(this).dialog('close').delay(2000).remove();
                            });  
                        }  
                    });
                }
                return false;    
            });
            
        $('input[type=radio][name=groupDisp]').change(function() {
                if (this.value == 'Target') {
                    $('#spreadSheet').find('table').dispTarget();
                    }
                else if (this.value == 'Effettivo') {
                    $('#spreadSheet').find('table').dispEff();
                    }
            });
            
        setViewMode(currStatus);
                        
        $('#dispQualification').click(function(){toggleColumn(1, this);});
        $('#dispSupervisor').click(function(){toggleColumn(2, this);});
        $('#dispPersonnel_Company').click(function(){toggleColumn(3, this);});
        $('#dispContract_Company').click(function(){toggleColumn(4, this);});
        $('#dispZoom').click(function(){toggleZoom(this);});

        $('#orderGrid').change(function(){
                saveAll();
                $('#orderBy').attr('value', this.value);
                $("#exitForm").submit();
                });
        $('#outExcel').click(function(){callExcel('eff')});
        $('#expJSON').click(function(){fnExport('json', 'false'); });
        $('#expXML').click(function(){fnExport('xml', 'false'); });
        $('#expPNG').click(function(){fnExport('png', 'false'); });
        $('#expCSV').click(function(){fnExport('csv', 'false'); });
        $('#expTXT').click(function(){fnExport('txt', 'false'); });
        $('#expSQL').click(function(){fnExport('sql', 'false'); });
        $('#expMS-Word').click(function(){fnExport('doc', 'false'); });
        $('#expMs-Excel').click(function(){callExcel('eff')});
        $('#expMs-Excel2').click(function(){callExcel('eff')});
        $('#expPDF').click(function(){callPdf('eff'); });
        $('#dettConfirm').click(function(){confirmDetail('keep');});
        $('#dettClear').click(function(){confirmDetail('clear');});
        $('#dettDiscard').click(function(){discardDetail();});
        $('#confSaveNote').click(function(){callNoteOut()});
        $('#discSaveNote').click(function(){$("#saveNote").dialog("close");});
        $('#expMs-Powerpoint').click(function(){fnExport('powerpoint', 'false'); });
//        $('#expPDF').click(function(){fnExport('pdf', 'true'); });
        $('#Reference').datepicker({"dateFormat" : "dd/mm/yy"}) ;
        $('#Planning').click(function(){callOut("plan", "", "")});
        $('#riassGrid').click(function(){callOut("riass", "", "")});
        $('#Cash').click(function(){callOut("cash", "", "")});
        
        var currTable = document.getElementById("spreadSheet");
        var lastTitleRow = $('#planGrid thead tr:not(.hiddenTitle):first');
        var lastTitleCell = lastTitleRow.find('th.sticky-cell:visible:last')
        currTotPos.x1 = getElementPosition(lastTitleCell[0]).x + lastTitleCell[0].offsetWidth;    
        currTotPos.x2 = getElementPosition($('#parentSheet')[0]).x + $('#parentSheet')[0].offsetWidth;
        currTotPos.y1 = getElementPosition(lastTitleRow[0]).y + lastTitleRow[0].offsetHeight;
        currTotPos.y2 = getElementPosition($('#parentSheet')[0]).y + $('#parentSheet')[0].offsetHeight;
        
<?php
    echo 'startDetail('.
            json_encode($this->dataGrid->Contract).', '.
            json_encode($this->dataGrid->DayTypes).');';
?>
            
        pingPlan("start");
        window.setInterval(pingPlan, 20000);
        
        $("#saveNote").dialog({
            autoOpen: false,
            closeOnEscape: false,
            open: function(event, ui) { 
                $(".ui-dialog-titlebar-close").hide(); 
            },
            width: "auto",
            title: "Save Note",
            show: {
              effect: "blind",
              duration: 100
            },
            hide: {
              effect: "blind",
              duration: 100
            }
        });
        
        
        $( function() {$('#spreadSheet, .events-label-space').tooltip({
            content: function (callback) {callback($(this).prop('title')); }
                                    });
        });

    });

    function pingPlan(modePar)
        {
        modePar = typeof modePar !== 'undefined' ? modePar : 'timer';    
        phpUrl=baseUrl+'/giorni-lav/ping-plan';
        request=$.post(phpUrl, {mode: modePar, act: 'Eff'})
            .done(function(data) {
            });
        }

    function callOut(outMode, outId, outId2)
        {
        if (outMode == "pers" && !(outId2 > 0))
            {
        <?php
            $translate = Zend_Registry::get('translate');
            echo 'alert("'.$translate->_('Non si puÃ² inserire un supervisor senza qualifica').'");';
        ?>
            return false;
            }
        $('#outMode').attr('value', outMode);
        $('#outPar').attr('value', outId);
        $('#outPar2').attr('value', outId2);
        saveAll();
        $("#exitForm").submit();
        }
                
    function callExcel(mode)
        {
        saveAll();
        $('#excelMode').attr('value', mode);
        $('#outGGLavExcel').attr('value', saveGridExcel());            
        $('#outEventiExcel').attr('value', '');            
        $('#outStatusExcel').attr('value', saveStatus());            
        $('#excelForm').attr('action', '/public/out-excel/out-sheet');
        $('#excelForm').attr('target', '');
        $("#excelForm").submit();
        }

    function callPdf(mode, tot)
        {
        saveAll();
        $('#excelMode').attr('value', mode);
        $('#outGGLavExcel').attr('value', saveGridExcel());            
        $('#outEventiExcel').attr('value', '');            
        $('#outStatusExcel').attr('value', saveStatus());            
        $('#excelForm').attr('action', '/public/out-excel/print-sheet');
        $('#excelForm').attr('target', '_blank');
        $("#excelForm").submit();
        }
        
    function saveGrid()
        {
        var data = Array();
        data[0] = Array();
        $('#singleTitle').children('th').each(function(i)
            {
            data[0][i] = $(this).text();
            });
        $('#planGrid').find('tbody tr').each(function (i, v) 
            {
            if ($(this).children('td:first').text() === "Totale")
                {
                return false;
                }
            data[i + 1] = Array();
            $(this).children('td').each(function (ii, vv) 
                {
                data[i + 1][ii] = $(this).text();
                });
            });
        return JSON.stringify(data);            
        }

    function saveAll()
        {
        $('#outGGLav').attr('value', saveGrid());
        $('#outStatus').attr('value', saveStatus());            
        }

    function toggleZero(currButton)
        {
        }

    function toggleTotals()
        {
        }

    function alignGrids()
        {
        }

    function alignEvents()
        {
        }
    
    function alignEventLabels()
        {
        }

    function isReadOnly()
    {
    <?php echo 'return '.($this->readonly=='1' ? 'true;' : 'false;');?>
    }

</script>
<?php
echo $this->jsGrid;
?>
<iframe id="txtArea1" style="display:none"></iframe>

<!--<div id="GGtabs">
    <div id="GGtabs-1">
-->
        <?php
//        echo '<form id="exitForm" name="exitForm" action="' . $this->baseUrl() .
//        '/giorni-lav/savegrid' . '"  method="POST" ' .
//        ' title="Close" alt="Close">';
        ?>
<div id="HeaderPlanning" class="headPlan">
    <div id="HeaderPlanning-1">
        <form id="exitForm" name="exitForm"
        <?php
        echo ' action="' . $this->baseUrl() .
        '/giorni-lav/savegrid' . '" ';
        ?>
               method="POST">
        <div id="buttons_wrapper" style="width: 100%; overflow: auto; ">
            <div id="buttons_content">
                <!--<button type="button" id="gestReq">Gestione Fasi</button>-->
                <div class="dropdown">
                    <button type="button" id="outExcel" class="dropbtn">Export</button>
                    <div class="dropdown-content">
                        <a href="#" id="expMs-Excel2">Ms-Excel</a>
                        <a href="#" id="expPDF">PDF</a>                    
                    </div>
                </div>
                <span style="margin-left: 55px; display: inline;">&nbsp;</span>
                <div class="dropdown">
                    <button type="button" id="visMode" class="dropbtn">Display</button>
                    <div class="dropdown-content">
                        <a href="#" id="dispQualification" class="button_red">Qualification</a>
                        <a href="#" id="dispSupervisor" class="button_red">Supervisor</a>    
                        <a href="#" id="dispPersonnel_Company" class="button_red">Personnel Company</a>
                        <a href="#" id="dispContract_Company" class="button_red">Contract Company</a>
                        <a href="#" id="dispZoom" class="button_red">Month/Year</a>
                    </div>
                </div>
                <span style="margin-left: 55px; display: inline;">&nbsp;</span>
                <span style="margin-left: 15px; display: inline;">Order by:</span>
                
                    <?php
                    echo '<select name="orderGrid" id="orderGrid" style="display: inline;">'."\n";
                    echo checkOpt('', '', $this->currOrder);
                    echo checkOpt('Qualification', '1', $this->currOrder);
                    echo checkOpt('Supervisor', '2', $this->currOrder);
                    echo checkOpt('Personnel Company', '3', $this->currOrder);
                    echo checkOpt('Activity', '4', $this->currOrder);
                    ?>
                    </select>

                    <span style="margin-left: 5px; display: inline;">Reference:</span>
                    <input name="reference-date" id="Reference" type="text" 
                           value = <?php echo '"'.$this->currReference.'"'; ?> >
                    <span style="margin-left: 20px; display: inline;">&nbsp;</span>
                    <button type="button" id="riassGrid">Contract</button>
                    <span style="margin-left: 20px; display: inline;">&nbsp;</span>
                    <button type="button" id="Planning">Planning</button>
                    <button type="button" id="Actual" class="button_red">Actual</button>
                    <button type="button" id="Cash">Cash</button>
                    <button type="button" id="CashGrid">$</button>

                
                    <span style="margin-left: 40px; display: inline;">&nbsp;</span>
                    <span id="warningConcurrents" class="warningConcurrents" 
                          onClick = "openAlert(concurrents);">
                          <!--onClick = "$('<div title=\'Alert\'>'+concurrents+'</div>').dialog();">-->
                        <img src= 
                            <?php 
                            echo '"'.$this->baseUrl().'/images/warning_icon.png"'; 
                            ?>                         
                            title="Warning concurrent users" 
                            alt="Warning concurrent users">Concurrent users!
                    </span>
                    <span style="margin-left: 5px; display: inline;">&nbsp;</span>
                    <?php 
                    if($this->readonly)
                        {
                        echo '<span id="readonlyImg" class="readonlyImg"> '.
                             '<img src= "'.$this->baseUrl().'/images/lock2.png" '.
                             'title="Readonly" alt="Readonly">Readonly!</span>';
                        }
                    ?>                         
                
                    
                    <div style="float: right">
              
                    <input type="hidden" name="outajax" id="outAjax" value=""/>
                    <input type="hidden" name="gglav" id="outGGLav"/>
                    <input type="hidden" name="gglavtot" id="outGGLavTot"/>
                    <input type="hidden" name="gglavtotvalgrid" 
                           id="outGGLavTotValGrid"/>
                    <input type="hidden" name="status" id="outStatus"/>
                    <input type="hidden" name="currid" id="currId" value=
                           <?php echo '"'.$this->currId.'"'; ?> >
                    <input type="hidden" name="mode" id="currMode" value="eff"/>
                    <input type="hidden" name="outmode" id="outMode" value=""/>
                    <input type="hidden" name="outpar" id="outPar" value=""/>
                    <input type="hidden" name="outpar2" id="outPar2" value=""/>
                    <input type="hidden" name="orderby" id="orderBy" value=""/>
                    <?php 
                    echo '<input type="hidden" name="datakeys" id="datakeys" value="' .
                    $this->keys . '"/>';
                    echo '<input type="hidden" name="keys" value="' . $this->keys . '"/>';
                    echo '<input type="hidden" name="gridlen" value="' . $this->gridLen . '"/>';
                    echo '<button type="submit" id="esci" name="esci" value="esci"><img src="' .
                    $this->baseUrl() . '/images/ok.png' .
                    '" title="Confirm" alt="Confirm">Confirm</button>';
                    echo '<button type="submit" id="annulla" name="annulla" value="annulla"><img src="' .
                    $this->baseUrl() . '/images/nao.png' .
                    '" title="Discard" alt="Discard">Discard</button>';
                    ?>
<!--                    echo '</select>'."\n";

                    echo '<span style="margin-left: 5px; display: inline;">Reference:</span>'."\n";
                    echo '<input name="reference-date" id="Reference" type="text" value = "'.
                            $this->currReference.'">'."\n";

                    echo '<span style="margin-left: 20px; display: inline;">&nbsp;</span>'."\n";
                    echo '<button type="button" id="riassGrid">Contract</button>'."\n";
                    echo '<span style="margin-left: 20px; display: inline;">&nbsp;</span>'."\n";
                    echo '<button type="button" id="Planning">Planning</button>'."\n";
                    echo '<button type="button" id="Actual" class="button_red">Actual</button>'."\n";
                    echo '<button type="button" id="Cash">Cash</button>'."\n";
                    echo '<button type="button" id="CashGrid">$</button>'."\n";
                    
                    echo '<div style="float: right">'."\n";
              
                    echo '<input type="hidden" name="outajax" id="outAjax" value=""/>';
                    echo '<input type="hidden" name="gglav" id="outGGLav"/>';
                    echo '<input type="hidden" name="gglavtot" id="outGGLavTot"/>';
                    echo '<input type="hidden" name="gglavtotvalgrid" id="outGGLavTotValGrid"/>'."\n";
                    echo '<input type="hidden" name="status" id="outStatus"/>'."\n";
                    echo '<input type="hidden" name="currid" id="currId" value="' . $this->currId . '"/>';
                    echo '<input type="hidden" name="mode" id="currMode" value="eff"/>';
                    echo '<input type="hidden" name="outmode" id="outMode" value=""/>';
                    echo '<input type="hidden" name="outpar" id="outPar" value=""/>';
                    echo '<input type="hidden" name="outpar2" id="outPar2" value=""/>';
                    echo '<input type="hidden" name="orderby" id="orderBy" value=""/>';
                    echo '<input type="hidden" name="datakeys" id="datakeys" value="' .
                    $this->keys . '"/>';
                    echo '<input type="hidden" name="keys" value="' . $this->keys . '"/>';
                    echo '<input type="hidden" name="gridlen" value="' . $this->gridLen . '"/>';
                    echo '<button type="submit" id="esci" name="esci" value="esci"><img src="' .
                    $this->baseUrl() . '/images/ok.png' .
                    '" title="Confirm" alt="Confirm">Confirm</button>';
                    echo '<button type="submit" id="annulla" name="annulla" value="annulla"><img src="' .
                    $this->baseUrl() . '/images/nao.png' .
                    '" title="Discard" alt="Discard">Discard</button>';
                    ?>-->
                </div>
            </div>
            <div id="cleared"></div>
            <div id="cleared"></div>
        </div>
        </form>
        <?php
        echo $this->render('giorni-lav/excelform.phtml');
        ?>                
    </div>
    <div id="GGtabs-2" style="width: 100%">
    </div>
</div>    
<div id="parentSheet" class="parentGrid">        
    <div id="spreadSheet" class="sticky-table sticky-ltr-cells sticky-headers mainGridPos">        
        <?php
        $calcGrids = makeGrid($this->dataGrid, $this->currStatus, $this->title);
        echo $calcGrids['mainGrid'] . $calcGrids['evGrid'];
        ?>
    </div>
        <?php
        ?>                
    </div>
    <span class="clear"></span>
    <script type="text/javascript">
<?php
echo $calcGrids['labelsVar'] . $calcGrids['alignFunct'];
?>
    </script>        
</div>

<?php
echo $this->render('giorni-lav/detailform.phtml');
echo $this->render('giorni-lav/noteform.phtml');

function checkOpt($label, $currVal, $currOrder)
    {
    if ($currVal == $currOrder)
        {
        return('<option value="' . $currVal . '" label="' . $label . 
                '" selected="selected">' . $label . '</option>' . "\n");
        }
    else
        {
        return('<option value="' . $currVal . '" label="' . $label . 
                '">' . $label . '</option>' . "\n");
        }
    }

function makeGrid($dataGrid, $currStatus, $title)
    {
    reset($dataGrid->currData);
    $firstData = current($dataGrid->currData);
    reset($firstData['Data']);
    $firstMonthYear = current(array_keys($firstData['Data']));
    $monthYear = explode('/', $firstMonthYear);
    $yearCount = 0;
    $currYear = $monthYear[1];
    $rowYear = '<th colspan="';
    $rowMonth = '';
    $rowMonthYear = '';
    $refColumn = 0;
    $countRefColumn = 0;
    $currRefMonth = sprintf("%02d", $dataGrid->projData['MeseRef']);
    $currRefYear = $dataGrid->projData['AnnoRef']; 
    $classRef = ' class="gridReference"';
    foreach ($firstData['Data'] as $key => $value)
        {
        $monthYear = explode('/', $key);
        if($monthYear[0] == $currRefMonth && $monthYear[1] == $currRefYear)
            {
            $classRef = '';
            $refColumn = $countRefColumn;
            }
        $countRefColumn++;
        if ($currYear != $monthYear[1])
            {
            $rowYear .= $yearCount . '">' . $currYear . "</th>\n<th colspan=\"";
            $currYear = $monthYear[1];
            $yearCount = 0;
            }
        $yearCount++;
        $rowMonth .= '<th id="dt-' . $monthYear[0] . '-' . $monthYear[1] . '"' . 
                $classRef . '>' . $monthYear[0] . "</th>\n";
        $rowMonthYear .= '<th id="' . $monthYear[0] . '-' . $monthYear[1] . '"' . 
                $classRef . '>' . $key . "</th>\n";
//        $rowMonth .= '<th id="dt-' . $monthYear[0] . '-' . $monthYear[1] . '">' .
//                $monthYear[0] . "</th>\n";
//        $rowMonthYear .= '<th id="' . $monthYear[0] . '-' . $monthYear[1] . '">' .
//                $key . "</th>\n";
        }
    $rowYear .= $yearCount . '">' . $currYear . "</th>\n";
    if($currStatus->my)
        {
        $singleMod = "hiddenTitle";
        $double1Mod = "";
        $double2Mod = "";
        }
    else
        {
        $singleMod = "";
        $double1Mod = "hiddenTitle";
        $double2Mod = "hiddenTitle";
        }

//  Single title    
    $grid = '<table id="planGrid" align="top" cellspacing="0" cellpadding="0">
<thead>
<tr id="singleTitle" class="sticky-row '.$singleMod.'">
<th class="sticky-cell">Phase/Activity</th>
<th class="sticky-cell">Qualification</th>
<th class="sticky-cell">Supervisor</th>
<th class="sticky-cell">Personnel Company</th>
<th class="sticky-cell lastGridTitle">Contract Company</th>
' . $rowMonthYear . '<th>Contr.Days</th><th>Tot.Days</th>
<th class="gridHidden">Tot.Rate</th>
<th class="gridHidden">Tot.PM</th>
<th class="gridHidden">Totale</th>
</tr>
';
    $gridTot = '<table id="planTotGrid" class="totGridTable" align="center" cellspacing="0" cellpadding="0">
<thead>
<tr id="singleTotTitle" class="sticky-row '.$singleMod.'">
<th>Contr.Days</th><th>Tot.Days</th>
<th class="gridHidden" >Tot.Rate</th>
<th class="gridHidden" >Tot.PM</th>
<th class="gridHidden" >Total</th>
</tr>
';

// Dual title
// First row

    $grid .= '
<tr id="dualTitle1" class="sticky-row visibleTitle'.$double1Mod.'">
<th class="sticky-cell" rowspan="2">Phase/Activity</th>
<th class="sticky-cell" rowspan="2">Qualification</th>
<th class="sticky-cell" rowspan="2">Supervisor</th>
<th class="sticky-cell" rowspan="2">Personnel Company</th>
<th class="sticky-cell lastGridTitle" rowspan="2">Contract Company</th>' . "\n" .
            $rowYear . '<th rowspan="2">Contr.Days</th><th rowspan="2">Tot.Days</th>
<th class="gridHidden"  rowspan="2">Tot.Rate</th>
<th class="gridHidden"  rowspan="2">Tot.PM</th>
<th class="gridHidden"  rowspan="2">Totale</th>
</tr>' . "\n";
    $gridTot .= '<tr id="dualTotTitle1" class="sticky-row visibleTitle '.$double1Mod.'">
<th rowspan="2">Contr.Days</th><th rowspan="2">Tot.Days</th>
<th rowspan="2">Tot.Rate</th>
<th rowspan="2">Tot.PM</th>
<th rowspan="2">Totale</th>
</tr>' . "\n";

// Second row
    $grid .= "<tr id=\"dualTitle2\" class=\"sticky-row visibleTitle2 ".$double2Mod."\">\n" . $rowMonth . "</thead>\n<tbody>\n";
    $gridTot .= "<tr id=\"dualTotTitle2\" class=\"sticky-row visibleTitle2 ".$double2Mod."\">\n</thead>\n<tbody>\n";

// Body
    $numLabelCols = 5;
    $months = array_keys($firstData['Data']);
    $numMonths = count($months);
    $lastVisibleCol = $numMonths > 12 ? $numMonths : 12;
    //$this->gridLen = $numLabelCols+$numMonths;
    $currAct = '';
    $rowCounter = 0;
//    $TotGenGG = 0;
//    $TotGenRate = 0;
//    $TotGenPM = 0;
    $colCount = 0;
    $TotArray = array();
    $dataRows = '';
    $labelRows = '';
    $allCounter = 0;
    $valGrid = "var valGrid = {";
    foreach ($months as $currMonth)
        {
        $TotArray[$currMonth] = array('totGG'=>0, 'invGG'=>0, 
            'totRate'=>0, 'totPM'=>0, 'invRate'=>0, 'invPM'=>0);
        }
    foreach ($dataGrid->currData as $key => $line)
        {
        if($allCounter > 0) $valGrid .= ",\n";
        $valGrid .= "r".$allCounter . ": {";
        $allCounter++;
        $keyFlag = false;
        if (array_key_exists('keyArea', $line) && $currAct != $line['keyArea'])
            {
            $keyFlag = true;
            $grid .= '<tr>' . "\n";
            $gridTot .= '<tr>' . "\n";
            $dataRows .= ",";
            $labelRows .= strval($rowCounter++) . ",";
            $currAct = $line['keyArea'];
            if (!$line['IsMainContr'])
                {
                $currClass = 'areaBannerNoCC';
                $totClass = 'gridTotals gridTotNoCC';    
                }
            elseif ($line['Vendor'] > 0)
                {
                $currClass = 'areaBannerVendor';
                $totClass = 'gridTotals';    
                }
            elseif ($line['NotInvoiced'] > 0)
                {
                $currClass = 'areaBannerNotInv';
                $totClass = 'gridTotals';    
                }
            else
                {
                $currClass = 'areaBannerNormal';
                $totClass = 'gridTotals';    
                }

            $gridTot .= "<td class='" . $currClass . "'>&nbsp;</td>\n" .
                    "<td class='" . $currClass . " gridHidden'>&nbsp;</td>\n" .
                    "<td class='" . $currClass . " gridHidden'>&nbsp;</td>\n" .
                    "<td class='" . $currClass . " gridHidden'>&nbsp;</td>\n" .
                    "</tr>\n";
            $grid .= '<td colspan="';
            $grid .= $numLabelCols;
            $grid .= '" onClick="callOut(' . "'fase', '" . $line['keyArea'] . "'" .
                    ');" class="sticky-cell ' . $currClass . '">' . $line['AreaShort'];
            if ($line['NotInvoiced'] > 0)
                {
                $grid .=  ' (Not Invoiced)';
                }
            $grid .=  '</td>' . "\n";
            for($emptyCell = 0; $emptyCell < ($numMonths+2); $emptyCell++)
                {
                $grid .= '<td class="' . $currClass .
                        getYearLimit($emptyCell, $months) . 
                        '">&nbsp;</td>' . "\n";
                if($emptyCell > 0) $valGrid .= ",\n";
                $valGrid .= "c".$emptyCell.': {rate: 0, pm:0, inv:false, contr:false}';
                }
            $grid .= '</tr>' . "\n";
                        
            }
        if (array_key_exists('keyRichiesta', $line) && ($line['keyRichiesta'] != '' || $line['idProgStep'] != ''))
            {
            if($keyFlag)
                {
                if($colCount > 0)
                    {
                    $valGrid .= ",\n tot: {".
                            "totcontrgg:0, totcontrate:0, totcontrpm:0, ".
                            "totgg:0, totrate:0, totpm:0, inv:false, contr:false} },\n";
                    }
                else    
                    {
                    $valGrid .= ",\n},\n";
                    }
                $valGrid .= "r".$allCounter . ": {";
                $allCounter++;
                }
            $rowCounter++;
            $dataRows .= $line['keyRichiesta'] . ',';
            $gridTot .= '<tr>' . "\n";
            $grid .= '<tr>' . "\n" .
                    '<td class="sticky-cell gridActiveTitles" onClick="callOut(' . "'att', '" . $line['idProgStep'] . "'" .
                    ');">' . $line['Step'] . '</td>' . "\n" .
                    '<td class="sticky-cell gridActiveTitles" onClick="callOut(' . "'qual', '" . $line['keyRichiesta'] .
                    "', '" . $line['idProgStep'] . "');\">" . $line['Qualifica'] . '</td>' . "\n" .
                    '<td class="sticky-cell gridActiveTitles" onClick="callOut(' . "'pers', '" . $line['idJob'] .
                    "', '" . $line['keyRichiesta'] . "'" .
                    ');">' . $line['Supervisor'] . '</td>' . "\n" .
                    '<td class="sticky-cell gridTitles">';

            $countPrev = 0;
            foreach ($line['ListFornPers'] as $currFornPers => $value)
                {
                if($countPrev == 0)
                    {
                    $grid .= '<span class="gridPrevForn">' . $currFornPers . '</span>';
                    }
                else
                    {                    
                    $grid .= ', ' . $currFornPers;                    
                    }
                $countPrev++;    
                }
                
            $grid .= '</td>'."\n".'<td class="sticky-cell gridTitles lastGridTitle">' .
                    $line['Sigla'] . '</td>' . "\n";
            $colCount = 0;
            $horizTot = array('GG'=>0, 'Rate'=>0, 'PM'=>0, 
                'contrGG'=>0, 'contrRate'=>0, 'contrPM'=>0);
            foreach ($line['Data'] as $mKey=>$value)
                {
                $titles = array();
                $classes = array();
                $currValue = '';
                if($colCount > 0)
                    {
                    $valGrid .= ",\n";
                    }
                $valGrid .= "c".$colCount.
                        ': {rate: ' . $value['RateGG'] . 
                        ', pm: ' . $value['RatePM'] . 
                        ', gg: ' . intval($value['GiorniEff']) . 
                        ', nr: ' . $value['GiorniNotInv'] . 
                        ', note: "' . str_replace(array("\n", "\r", "\""), 
                            array(" ", " ", "'"), $value['NoteGG']) . '"';
                if ($line['NotInvoiced'] == 0)
                    {
                    $currLineInv = ', inv:false';
                    $valGrid .= ',inv:false';
                    }
                else
                    {                    
                    $currLineInv = ', inv:true';
                    $valGrid .= ',inv:true';
                    }    
                if ($line['IsMainContr'])
                    {
                    $currLineContr = ', contr:true';
                    $valGrid .= ',contr:true}';
                    }
                else
                    {                    
                    $currLineContr = ', contr:false';
                    $valGrid .= ',contr:false}';
                    }    

                $classes[] = getYearLimit($colCount, $months);
                $currValue = $value['GiorniEff'];
                $numValue =  is_numeric($value['GiorniEff']) ? ($value['GiorniEff']+0) : 0;
//                $TotArray[$mKey]['totGG'] += $numValue+$value['GiorniNotInv'];    
                    
                if($colCount < $refColumn)
                    {
                    $classModifyer = 'Dis';
                    //$currValue = 'X';
                    }
                else    
                    {
                    $classModifyer = '';
                    $currValue = $value['GiorniEff'];
//                    $targetValue = $value['GiorniTarget'];
                    }
                    
                if ($value['GiorniEff'] > 0)
                    {
                    if ($value['NoteGG'] != '')
                        {
                        $classes[] = 'gridNote';
                        $titles[] = $value['NoteGG'];
                        }
                    $classes[] = 'gridEvid'.$classModifyer;
                    if($value['HasDetail'])
                        {
                        $classes[] = 'gridDetail';
                        }
                    if ($line['NotInvoiced'] == 0 && $line['IsMainContr'])
                        {
                        $horizTot['contrGG'] += $numValue;
                        }
//                    $horizTot['contrRate'] += $numValue*$value['RateGG'];
//                    $horizTot['contrPM'] += $numValue*$value['RatePM'];
                    $numValue += ($value['GiorniNotInv']+0);
                    $horizTot['GG'] += $numValue;
//                    $horizTot['Rate'] += $numValue*$value['RateGG'];
//                    $horizTot['PM'] += $numValue*$value['RatePM'];
                    if ($line['IsMainContr'])
                        {
                        $TotArray[$mKey]['totGG'] += $numValue;    
                        $TotArray[$mKey]['totRate'] += $numValue*$value['RateGG'];    
                        $TotArray[$mKey]['totPM'] += $numValue*$value['RatePM'];    
                        if ($line['NotInvoiced'] == 0)
                            {
                            $TotArray[$mKey]['invGG'] += ($value['GiorniEff'] + 0);
                            $TotArray[$mKey]['invRate'] += $numValue*$value['RateGG'];    
                            $TotArray[$mKey]['invPM'] += $numValue*$value['RatePM'];    
                            }
                        }
                    }
//                else if ($value['HasDetail'])
//                else if ($value['GiorniNotInv'] == 0 && $value['HasDetail'])
//                    {
//                    if($value['StatusDetail'] == 'A')
//                        {
//                        $classes[] = 'gridLocked'.$classModifyer;                        
//                        }
//                    else
//                        {
//                        $classes[] = 'gridEvid'.$classModifyer;
//                        }                        
////                    $classes[] = 'gridEvid'.$classModifyer;
//                    if(($currValue+0) == 0)
//                        {
//                        $currValue = 'D';
//                        }
//                    }
                else if (!$line['keyRichiesta'])
                    {
                    $classes[] = 'gridForbidden';
                    }
                else if($value['NoteGG'] != '')
                    {
                    $currValue = 'N';
                    $classes[] = 'gridNote';
                    $classes[] = 'gridZero'.$classModifyer;
                    $titles[] = $value['NoteGG'];
                    }
                else if($value['HasDetail'])
                    {
                    $classes[] = 'gridDetail';
                    $currValue =  'D';
                    if($value['StatusDetail'] == 'A')
                        {
                        $classes[] = 'gridEvid';
                        if ($value['GiorniNotInv'] > 0)
                            {    
                            $horizTot['GG'] += $value['GiorniNotInv'];    
                            $TotArray[$mKey]['totGG'] += $value['GiorniNotInv'];    
                            }
                        }
                    else
                        {
                        $classes[] = 'gridZero';
                        }
                    }
                else
                    {
                    $currValue =  $currValue == 'X' ? 'X' : $value['GiorniEff'];
                    $classes[] = 'gridZero'.$classModifyer;
                    }
                    
                    
                $grid .= '<td';
                if(count($titles)>0)
                    {
                    $grid .= ' title="'.implode('<br>', $titles).'"';
                    }
                if(count($classes)>0)
                    {
                    $grid .= ' class="'.implode(' ', $classes).'"';
                    }
                $grid .= '>'.$currValue. '</td>'."\n";                  
                    
                $colCount++;    
                }
            $grid .= '<td class="'.$totClass.'">' . $horizTot['contrGG'] . "</td>\n" .
                    '<td class="'.$totClass.'">' . $horizTot['GG'] . "</td>\n".
                    '<td class="gridHidden">&nbsp;' . "</td>\n".
                    '<td class="gridHidden">&nbsp;' . "</td>\n";
            $gridTot .= '<td class="'.$totClass.'">' . $horizTot['contrGG'] . '</td>' . "\n" .
                    '<td class="'.$totClass.'">' . $horizTot['GG'] . '</td>' . "\n".
                    '<td class="gridHidden">&nbsp;' . "</td>\n".
                    '<td class="gridHidden">&nbsp;' . "</td>\n";

//            $TotGenGG += $line['TotGGEff'];
//            $TotGenRate += $line['TotRate'];
//            $TotGenPM += $line['TotPM'];
//            $grid .= '<td class="gridTotals">' . $line['TotGGEff'] . '</td>' . "\n" .
//                    '<td class="gridHidden">' . $line['TotRate'] . '</td>' . "\n" .
//                    '<td class="gridHidden">' . $line['TotPM'] . '</td>' . "\n" .
//                    '<td class="gridHidden">' . ($line['TotPM'] + $line['TotRate']) . '</td>' . "\n";
//            $gridTot .= '<td class="gridTotals">' . $line['TotGG'] . '</td>' . "\n" .
//                    '<td class="gridTotals">' . $line['TotRate'] . '</td>' . "\n" .
//                    '<td class="gridTotals">' . $line['TotPM'] . '</td>' . "\n" .
//                    '<td class="gridTotals">' . ($line['TotPM'] + $line['TotRate']) . '</td>' . "\n";
            $grid .= '</tr>' . "\n";
            $gridTot .= '</tr>' . "\n";
            }
        else
            {
            $colCount = 0;
            $horizTot = array('GG'=>0, 'Rate'=>0, 'PM'=>0, 
                'contrGG'=>0, 'contrRate'=>0, 'contrPM'=>0);           
            }
        if($colCount > 0)
            {
            $valGrid .= ",\n tot: {".
            "totcontrgg:".$horizTot['contrGG'].
            ", totcontrate:".$horizTot['contrRate'].
            ", totcontrpm:".$horizTot['contrPM'].
            ", totgg:".$horizTot['GG'].
            ", totrate:".$horizTot['Rate'].
            ", totpm:".$horizTot['PM'].
            $currLineInv.
            $currLineContr.
            "} }\n";
            }
        else
            {
            $valGrid .= "\n}\n";
            }
        }
    $valGrid .= "};\n"; 
    $grid .= "</tbody>\n<tfoot>\n";
    $gridTot .= "</tbody>\n<tfoot>\n";


// Contract totals
    if (array_key_exists('totInvTarget', $dataGrid->totData))
        {
        $rowCounter++;
        $grid .= '<tr id="totInvGrid">' . "\n";
        $gridTot .= '<tr id="totTotInvGrid">' . "\n";
        $line = $dataGrid->totData['totInvTarget'];
        $labelRows .= strval($rowCounter) . ",";
        $grid .= '<td class="gridColTotals sticky-cell" colspan="' . $numLabelCols . '">' .
                $line['Qualifica'] . '</td>' . "\n";
        $totInvGen = array('GG'=>0,'Rate'=>0,'PM'=>0);
        $i = 0;
        foreach ($months as $currMonth)
            {
            $totInvGen['GG']+=$TotArray[$currMonth]['invGG'];
            $totInvGen['Rate']+=$TotArray[$currMonth]['invRate'];
            $totInvGen['PM']+=$TotArray[$currMonth]['invPM'];
            $grid .= '<td class="gridColTotals'.
                    getYearLimit($i++, $months).'">';
            $grid .= $TotArray[$currMonth]['invGG'] . '</td>' . "\n";
            }
        $grid .= "<td id='totGG1' class='gridColTotals'>"  . $totInvGen['GG'] . "</td>\n" .
                "<td class='gridColTotals'>&nbsp;</td>\n" .
                "<td class='gridColTotals gridHidden'>" . myFormat($totInvGen['Rate']) . "</td>\n" .
                "<td class='gridColTotals gridHidden'>" . myFormat($totInvGen['PM']) . "</td>\n" .
                "<td class='gridColTotals gridHidden'>" . myFormat($totInvGen['Rate'] + $totInvGen['PM']) . "</td>\n" .
                "</tr>\n";  //"<td class='gridColTotals'>" . $totInvGen['GG'] . "</td>\n" 
        $gridTot .= "<td class='gridColTotals'>" . "</td>\n" .
                "<td class='gridColTotals'>&nbsp;</td>\n" .
                "<td class='gridColTotals gridHidden'>" . myFormat($totInvGen['Rate']) . "</td>\n" .
                "<td class='gridColTotals gridHidden'>" . myFormat($totInvGen['PM']) . "</td>\n" .
                "<td class='gridColTotals gridHidden'>" . myFormat($totInvGen['Rate'] + $totInvGen['PM']) . "</td>\n" .
                "</tr>\n";
        }
    if (array_key_exists('progressivoInvTarget', $dataGrid->totData))
        {
        $rowCounter++;
        $grid .= '<tr id="progInvGrid">' . "\n";
        $gridTot .= '<tr id="progInvTotGrid">' . "\n";
        $line = $dataGrid->totData['progressivoInvTarget'];
        $labelRows .= strval($rowCounter) . ",";
        $grid .= '<td class="sticky-cell gridColProgressive" colspan="' . $numLabelCols . '">' .
                $line['Qualifica'] . '</td>' . "\n";
        $currProg = 0;
        $i = 0;
        foreach ($months as $currMonth)
            {
            $currProg += $TotArray[$currMonth]['invGG'];
            $grid .= '<td class="gridColProgressive'.
                    getYearLimit($i++, $months).'">';
            $grid .= $currProg . '</td>' . "\n";
            }
        $delta = (($dataGrid->projData['contractMD']+0)-($totInvGen['GG']+0)); 
        $deltaStr='<div id="deltaContract1">'.$delta.' &Delta;</div>';
        if($delta < 0)
            {
            $grid .= '<td class="deltaNegative">' . $deltaStr;
            $gridTot .= '<td class="gridColTotProgressive, deltaNegative">' . $deltaStr;
            }
        else
            {
            $grid .= '<td class="deltaPositive">' . $deltaStr;
            $gridTot .= '<td class="gridColTotProgressive, deltaPositive">' . $deltaStr;
            }
//        $grid .= "</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n";
        $grid .= "</td>\n<td class='gridColProgressive'>&nbsp;</td>\n" .
                "<td class='gridHidden'>&nbsp;</td>\n" .
                "<td class='gridHidden'>&nbsp;</td>\n" .
                "<td class='gridHidden'>&nbsp;</td>\n" .
                "</tr>\n";
        $gridTot .= "</td>\n<td class='gridColProgressive'>&nbsp;</td>\n" .
                "<td class='gridColTotProgressive gridHidden'>&nbsp;</td>\n" .
                "<td class='gridColTotProgressive gridHidden'>&nbsp;</td>\n" .
                "<td class='gridColTotProgressive gridHidden'>&nbsp;</td>\n" .
                "</tr>\n";
        }
// Totali
    if (array_key_exists('totTarget', $dataGrid->totData))
        {
        $rowCounter++;
        $grid .= '<tr id="totGrid">' . "\n";
        $gridTot .= '<tr id="totTotGrid">' . "\n";
        $line = $dataGrid->totData['totTarget'];
        $labelRows .= strval($rowCounter) . ",";
        $grid .= '<td class="sticky-cell gridColTotals2" colspan="' . $numLabelCols . '">' .
                $line['Qualifica'] . '</td>' . "\n";
        $totGen = array('GG'=>0,'Rate'=>0,'PM'=>0);
        $i = 0;
        foreach ($months as $currMonth)
            {
            $totGen['GG']+=$TotArray[$currMonth]['totGG'];
            $totGen['Rate']+=$TotArray[$currMonth]['totRate'];
            $totGen['PM']+=$TotArray[$currMonth]['totPM'];
            $grid .= '<td class="gridColTotals2'.
                    getYearLimit($i++, $months).'">';
            $grid .= $TotArray[$currMonth]['totGG'] . '</td>' . "\n";
            }
        $grid .= "<td class='gridColTotals2'>&nbsp;</td>".
                "<td id='totGG2' class='gridColTotals2'>" . $totGen['GG'] . "</td>\n" .
                "<td class='gridColTotals2 gridHidden'>" . myFormat($totGen['Rate']) . "</td>\n" .
                "<td class='gridColTotals2 gridHidden'>" . myFormat($totGen['PM']) . "</td>\n" .
                "<td class='gridColTotals2 gridHidden'>" . myFormat($totGen['Rate'] + $totGen['PM']) . "</td>\n" .
                "</tr>\n";
        $gridTot .= "<td class='gridColTotals2'>&nbsp;</td>".
                "<td class='gridColTotals2'>" . $totGen['GG'] . "</td>\n" .
                "<td class='gridColTotals2 gridHidden'>" . myFormat($totGen['Rate']) . "</td>\n" .
                "<td class='gridColTotals2 gridHidden'>" . myFormat($totGen['PM']) . "</td>\n" .
                "<td class='gridColTotals2 gridHidden'>" . myFormat($totGen['Rate'] + $totGen['PM']) . "</td>\n" .
                "</tr>\n";
        }
    if (array_key_exists('progressivoTarget', $dataGrid->totData))
        {
        $rowCounter++;
        $grid .= '<tr id="progGrid">' . "\n";
        $gridTot .= '<tr id="progTotGrid">' . "\n";
        $line = $dataGrid->totData['progressivoTarget'];
        $labelRows .= strval($rowCounter) . ",";
        $grid .= '<td class="sticky-cell gridColProgressive2" colspan="' . $numLabelCols . '">' .
                $line['Qualifica'] . '</td>' . "\n";
        $currProg = 0;
        $i = 0;
        foreach ($months as $currMonth)
            {
            $currProg += $TotArray[$currMonth]['totGG'];
            $grid .= '<td class="gridColProgressive2'.
                    getYearLimit($i++, $months).'">';
            $grid .= $currProg . '</td>' . "\n";
            }
//        $grid .= "<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n";
        $delta = (($dataGrid->projData['contractMD']+0)-($totGen['GG']+0)); 
        $deltaStr='<div id="deltaContract2">'.$delta.' &Delta;</div>';
        if($delta < 0)
            {
            $grid .= '<td class="gridColProgressive2">&nbsp;</td><td class="deltaNegative">' . $deltaStr;
            $gridTot .= '<td class="gridColProgressive2">&nbsp;</td><td class="gridColTotProgressive, deltaNegative">' . $deltaStr;
            }
        else
            {
            $grid .= '<td>&nbsp;</td><td class="deltaPositive">' . $deltaStr;
            $gridTot .= '<td>&nbsp;</td><td class="gridColTotProgressive, deltaPositive">' . $deltaStr;
            }
        $grid .= "</td>\n" .
                "<td class='gridHidden'>&nbsp;</td>\n" .
                "<td class='gridHidden'>&nbsp;</td>\n" .
                "<td class='gridHidden'>&nbsp;</td>\n" .
                "</tr>\n";
        $gridTot .= "</td>\n" .
                "<td class='gridColTotProgressive2 gridHidden'>&nbsp;</td>\n" .
                "<td class='gridColTotProgressive2 gridHidden'>&nbsp;</td>\n" .
                "<td class='gridColTotProgressive2 gridHidden'>&nbsp;</td>\n" .
                "</tr>\n";
        }


//    if (array_key_exists('totEff', $dataGrid->totData))
//        {
//        $rowCounter++;
//        $grid .= '<tr id="totGrid">' . "\n";
//        $gridTot .= '<tr id="totTotGrid">' . "\n";
//        $line = $dataGrid->totData['totEff'];
//        $labelRows .= strval($rowCounter) . ",";
//        $grid .= '<td class="sticky-cell gridColTotals" colspan="' . $numLabelCols . '">' .
//                $line['Qualifica'] . '</td>' . "\n";
//        $colCount = 0;
//        foreach ($months as $currMonth)
//            {
//            $colCount++;
//            $grid .= '<td class="gridColTotals">';
//            $grid .= $TotArray[$currMonth]['totGG'] . '</td>' . "\n";
////            $grid .= $line[$currMonth] . '</td>' . "\n";
//            }
//        $grid .= "<td class='gridColTotals'>" . $TotGenGG . "</td>\n" .
//                "<td class='gridHidden'>" . $TotGenRate . "</td>\n" .
//                "<td class='gridHidden'>" . $TotGenPM . "</td>\n" .
//                "<td class='gridHidden'>" . ($TotGenRate + $TotGenPM) . "</td>\n" .
//                "</tr>\n";
//        $gridTot .= "<td class='gridColTotals'>" . $TotGenGG . "</td>\n" .
//                "<td class='gridColTotals'>" . $TotGenRate . "</td>\n" .
//                "<td class='gridColTotals'>" . $TotGenPM . "</td>\n" .
//                "<td class='gridColTotals'>" . ($TotGenRate + $TotGenPM) . "</td>\n" .
//                "</tr>\n";
//        }
//    if (array_key_exists('progressivoEff', $dataGrid->totData))
//        {
//        $rowCounter++;
//        $grid .= '<tr id="progGrid">' . "\n";
//        $gridTot .= '<tr id="progTotGrid">' . "\n";
//        $line = $dataGrid->totData['progressivoEff'];
//        $labelRows .= strval($rowCounter) . ",";
//        $grid .= '<td class="sticky-cell gridColTotals" colspan="' . $numLabelCols . '">' .
//                $line['Qualifica'] . '</td>' . "\n";
//        $colCount = 0;
//        $progGG = 0;
//        foreach ($months as $currMonth)
//            {
//            $colCount++;
//            $progGG += $TotArray[$currMonth]['totGG'];
//            $grid .= '<td class="gridColTotals">';
//            $grid .= $progGG . '</td>' . "\n";
////            $grid .= $line[$currMonth] . '</td>' . "\n";
//            }
//        $grid .= "<td></td>\n<td class='gridHidden'></td>\n<td class='gridHidden'></td>\n<td class='gridHidden'></td>\n</tr>\n";
//        $gridTot .= "<td class='gridColTotals'>&nbsp;</td>\n" .
//                "<td class='gridgridHidden'>&nbsp;</td>\n" .
//                "<td class='gridHidden'>&nbsp;</td>\n" .
//                "<td class='gridHidden'>&nbsp;</td>\n" .
//                "</tr>\n";
//        }
    $grid .= "</tfoot>\n</table>\n";
    $gridTot .= "</tfoot>\n</table>\n";

    $labelRows = 'var labelRows = [' . substr($labelRows, 0, -1) . "];\n";
    $dataRows = substr($dataRows, 0, -1);
    $labelRows .= 'var dataRows = [' . $dataRows . "];\n" .
            "$('#datakeys').val('" . $dataRows . "');\n";
    "var numLabelCols=" . $numLabelCols . ";\n" .
            "var lastVisibleCol=" . $lastVisibleCol . ";\n" .
            "var currStartVisCol=0;\n";

    $gridEV = '';
    $alignEvFunct = "\n";
    $alignEvLabelsFunct = "\n";

    return array('labelsVar' => $labelRows . $valGrid,
        'alignFunct' => $alignEvFunct . $alignEvLabelsFunct,
        'mainGrid' => $grid,
        'totGrid' => $gridTot,
        'evGrid' => $gridEV);
    }

    
    
function getYearLimit($numMonth, $months)
    {
    if($numMonth < count($months)  && substr($months[$numMonth],0,2) == '12')
        {
        return " gridYearLimit";
        }
    else    
        {
        return "";
        }
//    
    }
        
function myFormat($inValue)
    {
    if($inValue == round($inValue))
        {
        return(number_format($inValue, 0, ',', '.'));
        }
    else
        {
        return(number_format($inValue, 2, ',', '.'));            
        }    
    }

